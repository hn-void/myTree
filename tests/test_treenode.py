import os
import unittest

from myTree import mytree, display


class TestTreeNode(unittest.TestCase):

    def setUp(self):
        tests_dir = os.path.dirname(os.path.abspath(__file__))
        self.root = mytree.TreeNode(tests_dir+'/test_files',
                                    dfc=display.DisplayFormatChanger())

    def test_buildtree(self):
        '''check if the pairs of filename and depth are correct'''
        # It seems the order of result generated by listdir depends'''
        # How about always sort the list to ensure the order?'''
        # or something
        self.root.build_tree(ignore_hidden=True,
                             ignore_regular=False,
                             ignore_files=[])

        res = []

        def dfs(node: mytree.TreeNode):
            res.append((node.filename, node.depth))
            for child in node.children:
                dfs(child)

        dfs(self.root)

        expected = {
            'test_files': 0,
            'a_1.txt': 1,
            'a_2.py': 1,
            'A_1': 1,
            'B_2': 2,
            'C_1': 3,
            'c_2.docx': 3,
            'b_1.ml': 2,
            'b_2.hs': 2
        }

        for filename, depth in res:
            self.assertEqual(depth, expected[filename])
